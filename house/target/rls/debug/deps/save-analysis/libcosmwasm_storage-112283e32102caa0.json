{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0","program":"C:\\Users\\weather\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cosmwasm_storage","--edition=2018","C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"iterator\"","-C","metadata=112283e32102caa0","-C","extra-filename=-112283e32102caa0","--out-dir","c:\\workspace\\git\\secretbet-contract\\house\\target\\rls\\debug\\deps","-L","dependency=c:\\workspace\\git\\secretbet-contract\\house\\target\\rls\\debug\\deps","--extern","cosmwasm_std=c:\\workspace\\git\\secretbet-contract\\house\\target\\rls\\debug\\deps\\libcosmwasm_std-7f25daa75fcbce41.rmeta","--extern","serde=c:\\workspace\\git\\secretbet-contract\\house\\target\\rls\\debug\\deps\\libserde-d7c29432faa34709.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\weather\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\workspace\\git\\secretbet-contract\\house\\target\\rls\\debug\\deps\\libcosmwasm_storage-112283e32102caa0.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_storage","disambiguator":[15495231908643428961,13050322041101903730]},"crate_root":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src","external_crates":[{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":14,"id":{"name":"serde","disambiguator":[8910547674129597400,16368540102392467952]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":15,"id":{"name":"serde_derive","disambiguator":[13684562298464954370,8588370545235739688]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":16,"id":{"name":"cosmwasm_std","disambiguator":[17244848152856118373,17107603591341657417]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":17,"id":{"name":"schemars","disambiguator":[6184365185911896424,8570679401948260688]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":18,"id":{"name":"schemars_derive","disambiguator":[13404474749228748655,12581588977311355027]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":19,"id":{"name":"serde_json","disambiguator":[6412207614580620115,18293662491499643989]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":20,"id":{"name":"itoa","disambiguator":[14607357783814654536,3581029441771282690]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":21,"id":{"name":"ryu","disambiguator":[15102016992269480173,8714734155128650866]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":22,"id":{"name":"thiserror","disambiguator":[2125312380419982902,4629668591767193796]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":23,"id":{"name":"thiserror_impl","disambiguator":[12239349386885963738,7953600395889674480]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":24,"id":{"name":"base64","disambiguator":[17349211930751526393,16250474574576526935]}},{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","num":25,"id":{"name":"serde_json_wasm","disambiguator":[15458564141806116759,5096565980812637638]}}],"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":0,"byte_end":483,"line_start":1,"line_end":13,"column_start":1,"column_end":78}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":143,"byte_end":149,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"alias_span":null,"name":"bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":151,"byte_end":162,"line_start":9,"line_end":9,"column_start":26,"column_end":37},"alias_span":null,"name":"bucket_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":164,"byte_end":170,"line_start":9,"line_end":9,"column_start":39,"column_end":45},"alias_span":null,"name":"Bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":172,"byte_end":186,"line_start":9,"line_end":9,"column_start":47,"column_end":61},"alias_span":null,"name":"ReadonlyBucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":215,"byte_end":233,"line_start":10,"line_end":10,"column_start":27,"column_end":45},"alias_span":null,"name":"to_length_prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":235,"byte_end":260,"line_start":10,"line_end":10,"column_start":47,"column_end":72},"alias_span":null,"name":"to_length_prefixed_nested","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":290,"byte_end":298,"line_start":11,"line_end":11,"column_start":28,"column_end":36},"alias_span":null,"name":"prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":300,"byte_end":313,"line_start":11,"line_end":11,"column_start":38,"column_end":51},"alias_span":null,"name":"prefixed_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":315,"byte_end":330,"line_start":11,"line_end":11,"column_start":53,"column_end":68},"alias_span":null,"name":"PrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":332,"byte_end":355,"line_start":11,"line_end":11,"column_start":70,"column_end":93},"alias_span":null,"name":"ReadonlyPrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":377,"byte_end":384,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"currval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":386,"byte_end":393,"line_start":12,"line_end":12,"column_start":29,"column_end":36},"alias_span":null,"name":"nextval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":395,"byte_end":403,"line_start":12,"line_end":12,"column_start":38,"column_end":46},"alias_span":null,"name":"sequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":426,"byte_end":435,"line_start":13,"line_end":13,"column_start":21,"column_end":30},"alias_span":null,"name":"singleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":437,"byte_end":451,"line_start":13,"line_end":13,"column_start":32,"column_end":46},"alias_span":null,"name":"singleton_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":453,"byte_end":470,"line_start":13,"line_end":13,"column_start":48,"column_end":65},"alias_span":null,"name":"ReadonlySingleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":472,"byte_end":481,"line_start":13,"line_end":13,"column_start":67,"column_end":76},"alias_span":null,"name":"Singleton","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","byte_start":0,"byte_end":483,"line_start":1,"line_end":13,"column_start":1,"column_end":78},"name":"","qualname":"::","value":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":69},{"krate":0,"index":74},{"krate":0,"index":88},{"krate":0,"index":129},{"krate":0,"index":138},{"krate":0,"index":187},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1118,"byte_end":1124,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"bucket","qualname":"::bucket::bucket","value":"pub fn bucket<'a, T>(&'a mut Storage, &[u8]) -> Bucket where T: Serialize +\nDeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Bucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Bucket::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1060,"byte_end":1110,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1347,"byte_end":1358,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"bucket_read","qualname":"::bucket::bucket_read","value":"pub fn bucket_read<'a, T>(&'a Storage, &[u8]) -> ReadonlyBucket where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyBucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyBucket::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1281,"byte_end":1339,"line_start":24,"line_end":24,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1538,"byte_end":1544,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::bucket::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1881,"byte_end":1884,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Bucket>::new","value":"pub fn new(&'a mut Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2091,"byte_end":2101,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<Bucket>::multilevel","value":"pub fn multilevel(&'a mut Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2410,"byte_end":2414,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"save","qualname":"<Bucket>::save","value":"pub fn save(&mut Self, &[u8], &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2313,"byte_end":2398,"line_start":62,"line_end":62,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2574,"byte_end":2580,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"remove","qualname":"<Bucket>::remove","value":"pub fn remove(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2772,"byte_end":2776,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"load","qualname":"<Bucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2677,"byte_end":2760,"line_start":72,"line_end":72,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3080,"byte_end":3088,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Bucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":2928,"byte_end":3025,"line_start":78,"line_end":78,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3030,"byte_end":3068,"line_start":79,"line_end":79,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3287,"byte_end":3292,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"range","qualname":"<Bucket>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<Iterator<Item = StdResult<KV<T>>> + 'b>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3247,"byte_end":3275,"line_start":85,"line_end":85,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3894,"byte_end":3900,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"update","qualname":"<Bucket>::update","value":"pub fn update<A, E>(&mut Self, &[u8], A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3616,"byte_end":3686,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3691,"byte_end":3777,"line_start":98,"line_end":98,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3782,"byte_end":3785,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":3790,"byte_end":3882,"line_start":100,"line_end":100,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4197,"byte_end":4211,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ReadonlyBucket","qualname":"::bucket::ReadonlyBucket","value":"ReadonlyBucket {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4552,"byte_end":4555,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyBucket>::new","value":"pub fn new(&'a Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4766,"byte_end":4776,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyBucket>::multilevel","value":"pub fn multilevel(&'a Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5087,"byte_end":5091,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlyBucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4992,"byte_end":5075,"line_start":143,"line_end":143,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5395,"byte_end":5403,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlyBucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5243,"byte_end":5340,"line_start":149,"line_end":149,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5345,"byte_end":5383,"line_start":150,"line_end":150,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5602,"byte_end":5607,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"range","qualname":"<ReadonlyBucket>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<Iterator<Item = StdResult<KV<T>>> + 'b>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":5562,"byte_end":5590,"line_start":156,"line_end":156,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":14924,"byte_end":14942,"line_start":9,"line_end":9,"column_start":8,"column_end":26},"name":"to_length_prefixed","qualname":"::length_prefixed::to_length_prefixed","value":"pub fn to_length_prefixed(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given namespace as documented\n in https://github.com/webmaster128/key-namespacing#length-prefixed-keys\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given namespace as documented","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":14771,"byte_end":14840,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ in https://github.com/webmaster128/key-namespacing#length-prefixed-keys","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":14841,"byte_end":14916,"line_start":8,"line_end":8,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":15283,"byte_end":15308,"line_start":18,"line_end":18,"column_start":8,"column_end":33},"name":"to_length_prefixed_nested","qualname":"::length_prefixed::to_length_prefixed_nested","value":"pub fn to_length_prefixed_nested(&[&[u8]]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given nested namespace\n as documented in https://github.com/webmaster128/key-namespacing#nesting\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given nested namespace","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":15136,"byte_end":15198,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ as documented in https://github.com/webmaster128/key-namespacing#nesting","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\length_prefixed.rs","byte_start":15199,"byte_end":15275,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":28852,"byte_end":28860,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"prefixed","qualname":"::prefixed_storage::prefixed","value":"pub fn prefixed<'a>(&'a mut Storage, &[u8]) -> PrefixedStorage","parent":null,"children":[],"decl_id":null,"docs":" An alias of PrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of PrefixedStorage::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":28785,"byte_end":28844,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29061,"byte_end":29074,"line_start":16,"line_end":16,"column_start":8,"column_end":21},"name":"prefixed_read","qualname":"::prefixed_storage::prefixed_read","value":"pub fn prefixed_read<'a>(&'a Storage, &[u8]) -> ReadonlyPrefixedStorage","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyPrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyPrefixedStorage::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":28986,"byte_end":29053,"line_start":15,"line_end":15,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29234,"byte_end":29249,"line_start":23,"line_end":23,"column_start":12,"column_end":27},"name":"PrefixedStorage","qualname":"::prefixed_storage::PrefixedStorage","value":"PrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29356,"byte_end":29359,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<PrefixedStorage>::new","value":"pub fn new(&'a mut Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29649,"byte_end":29659,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<PrefixedStorage>::multilevel","value":"pub fn multilevel(&'a mut Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29856,"byte_end":29859,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"get","qualname":"<PrefixedStorage>::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29975,"byte_end":29978,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"set","qualname":"<PrefixedStorage>::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30101,"byte_end":30107,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"remove","qualname":"<PrefixedStorage>::remove","value":"pub fn remove(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30419,"byte_end":30424,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"range","qualname":"<PrefixedStorage>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<Iterator<Item = KV> + 'b>","parent":null,"children":[],"decl_id":null,"docs":" range allows iteration over a set of keys, either forwards or backwards\n uses standard rust range notation, and eg db.range(b\"foo\"..b\"bar\") also works reverse\n","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30205,"byte_end":30233,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/ range allows iteration over a set of keys, either forwards or backwards","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30238,"byte_end":30313,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ uses standard rust range notation, and eg db.range(b\"foo\"..b\"bar\") also works reverse","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30318,"byte_end":30407,"line_start":59,"line_end":59,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30666,"byte_end":30689,"line_start":70,"line_end":70,"column_start":12,"column_end":35},"name":"ReadonlyPrefixedStorage","qualname":"::prefixed_storage::ReadonlyPrefixedStorage","value":"ReadonlyPrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30800,"byte_end":30803,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyPrefixedStorage>::new","value":"pub fn new(&'a Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":31097,"byte_end":31107,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyPrefixedStorage>::multilevel","value":"pub fn multilevel(&'a Storage, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":31308,"byte_end":31311,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"get","qualname":"<ReadonlyPrefixedStorage>::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":31540,"byte_end":31545,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"range","qualname":"<ReadonlyPrefixedStorage>::range","value":"pub fn range<'b>(&'b Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<Iterator<Item = KV> + 'b>","parent":null,"children":[],"decl_id":null,"docs":" range allows iteration over a set of keys, either forwards or backwards\n","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":31420,"byte_end":31448,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/ range allows iteration over a set of keys, either forwards or backwards","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":31453,"byte_end":31528,"line_start":97,"line_end":97,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":33981,"byte_end":33989,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"sequence","qualname":"::sequence::sequence","value":"pub fn sequence<'a>(&'a mut Storage, &[u8]) -> Singleton","parent":null,"children":[],"decl_id":null,"docs":" Sequence creates a custom Singleton to hold an empty sequence\n","sig":null,"attributes":[{"value":"/ Sequence creates a custom Singleton to hold an empty sequence","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":33908,"byte_end":33973,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34223,"byte_end":34230,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"currval","qualname":"::sequence::currval","value":"pub fn currval(&Singleton<, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" currval returns the last value returned by nextval. If the sequence has never been used,\n then it will return 0.\n","sig":null,"attributes":[{"value":"/ currval returns the last value returned by nextval. If the sequence has never been used,","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34096,"byte_end":34188,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ then it will return 0.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34189,"byte_end":34215,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34472,"byte_end":34479,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"nextval","qualname":"::sequence::nextval","value":"pub fn nextval(&mut Singleton<, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" nextval increments the counter by 1 and returns the new value.\n On the first time it is called (no sequence info in db) it will return 1.\n","sig":null,"attributes":[{"value":"/ nextval increments the counter by 1 and returns the new value.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34320,"byte_end":34386,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ On the first time it is called (no sequence info in db) it will return 1.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\sequence.rs","byte_start":34387,"byte_end":34464,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36384,"byte_end":36393,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"singleton","qualname":"::singleton::singleton","value":"pub fn singleton<'a, T>(&'a mut Storage, &[u8]) -> Singleton where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Singleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Singleton::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36323,"byte_end":36376,"line_start":9,"line_end":9,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36613,"byte_end":36627,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"singleton_read","qualname":"::singleton::singleton_read","value":"pub fn singleton_read<'a, T>(&'a Storage, &[u8]) -> ReadonlySingleton where\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlySingleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlySingleton::new for less verbose usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36544,"byte_end":36605,"line_start":17,"line_end":17,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37125,"byte_end":37134,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Singleton","qualname":"::singleton::Singleton","value":"Singleton {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" Singleton effectively combines PrefixedStorage with TypedStorage to\n work on a single storage key. It performs the to_length_prefixed transformation\n on the given name to ensure no collisions, and then provides the standard\n TypedStorage accessors, without requiring a key (which is defined in the constructor)\n","sig":null,"attributes":[{"value":"/ Singleton effectively combines PrefixedStorage with TypedStorage to","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36790,"byte_end":36861,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ work on a single storage key. It performs the to_length_prefixed transformation","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36862,"byte_end":36945,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ on the given name to ensure no collisions, and then provides the standard","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":36946,"byte_end":37023,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ TypedStorage accessors, without requiring a key (which is defined in the constructor)","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37024,"byte_end":37113,"line_start":28,"line_end":28,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37471,"byte_end":37474,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Singleton>::new","value":"pub fn new(&'a mut Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37759,"byte_end":37763,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"save","qualname":"<Singleton>::save","value":"pub fn save(&mut Self, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37662,"byte_end":37747,"line_start":51,"line_end":51,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37890,"byte_end":37896,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"remove","qualname":"<Singleton>::remove","value":"pub fn remove(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38055,"byte_end":38059,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"load","qualname":"<Singleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37960,"byte_end":38043,"line_start":61,"line_end":61,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38330,"byte_end":38338,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Singleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38178,"byte_end":38275,"line_start":67,"line_end":67,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38280,"byte_end":38318,"line_start":68,"line_end":68,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38733,"byte_end":38739,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"update","qualname":"<Singleton>::update","value":"pub fn update<A, E>(&mut Self, A) -> Result<T, E> where A: FnOnce(T) ->\nResult<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" update will load the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful","sig":null,"attributes":[{"value":"/ update will load the data, perform the specified action, and store the result","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38464,"byte_end":38545,"line_start":74,"line_end":74,"column_start":5,"column_end":86}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38550,"byte_end":38635,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38640,"byte_end":38643,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This is the least stable of the APIs, and definitely needs some usage","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38648,"byte_end":38721,"line_start":77,"line_end":77,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39121,"byte_end":39138,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"ReadonlySingleton","qualname":"::singleton::ReadonlySingleton","value":"ReadonlySingleton {  }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" ReadonlySingleton only requires a Storage and exposes only the\n methods of Singleton that don't modify state.\n","sig":null,"attributes":[{"value":"/ ReadonlySingleton only requires a Storage and exposes only the","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":38993,"byte_end":39059,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ methods of Singleton that don't modify state.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39060,"byte_end":39109,"line_start":91,"line_end":91,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39479,"byte_end":39482,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlySingleton>::new","value":"pub fn new(&'a Storage, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39769,"byte_end":39773,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlySingleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39674,"byte_end":39757,"line_start":114,"line_end":114,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":40044,"byte_end":40052,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlySingleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39892,"byte_end":39989,"line_start":120,"line_end":120,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39994,"byte_end":40032,"line_start":121,"line_end":121,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1811,"byte_end":1817,"line_start":42,"line_end":42,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4474,"byte_end":4488,"line_start":123,"line_end":123,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29323,"byte_end":29338,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30759,"byte_end":30782,"line_start":75,"line_end":75,"column_start":10,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37398,"byte_end":37407,"line_start":39,"line_end":39,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39398,"byte_end":39415,"line_start":102,"line_end":102,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":1811,"byte_end":1817,"line_start":42,"line_end":42,"column_start":13,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\bucket.rs","byte_start":4474,"byte_end":4488,"line_start":123,"line_end":123,"column_start":13,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":29323,"byte_end":29338,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\prefixed_storage.rs","byte_start":30759,"byte_end":30782,"line_start":75,"line_end":75,"column_start":10,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":37398,"byte_end":37407,"line_start":39,"line_end":39,"column_start":13,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\weather\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cosmwasm-storage-0.12.0\\src\\singleton.rs","byte_start":39398,"byte_end":39415,"line_start":102,"line_end":102,"column_start":13,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}}]}